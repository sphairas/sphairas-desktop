/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.thespheres.betula.validation.ui.impl;

import org.openide.util.NbPreferences;
import org.thespheres.betula.validation.ui.ValidationProgressUI;

final class ValidationsPanel extends javax.swing.JPanel {

    private final ValidationsOptionsPanelController controller;

    ValidationsPanel(ValidationsOptionsPanelController controller) {
        this.controller = controller;
        initComponents();
        this.logOutputCheckBox.addActionListener(e -> this.controller.changed());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        logOutputCheckBox = new javax.swing.JCheckBox();

        org.openide.awt.Mnemonics.setLocalizedText(logOutputCheckBox, org.openide.util.NbBundle.getMessage(ValidationsPanel.class, "ValidationsPanel.logOutputCheckBox.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logOutputCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logOutputCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    void load() {
        final boolean logEnabled = NbPreferences.forModule(ValidationProgressUI.class).getBoolean(ValidationProgressUI.PROP_LOG_VALIDATIONS, false);
        this.logOutputCheckBox.setSelected(logEnabled);
    }

    void store() {
        final boolean logEnabled = this.logOutputCheckBox.isSelected();
        NbPreferences.forModule(ValidationProgressUI.class).putBoolean(ValidationProgressUI.PROP_LOG_VALIDATIONS, logEnabled);
    }

    boolean valid() {
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox logOutputCheckBox;
    // End of variables declaration//GEN-END:variables
}
