/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.thespheres.betula.services.ui.ks;

import javax.swing.event.ChangeListener;
import org.apache.commons.lang3.StringUtils;
import org.openide.WizardDescriptor;
import org.openide.util.HelpCtx;

/**
 *
 * @author boris.heithecker
 */
public class CreateNewKeyActionCNVisualPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateNewKeyActionCNVisualPanel
     */
    public CreateNewKeyActionCNVisualPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cnLabel = new javax.swing.JLabel();
        cnTextField = new javax.swing.JTextField();
        cnInfoPanel = new org.jdesktop.swingx.JXPanel();

        org.openide.awt.Mnemonics.setLocalizedText(cnLabel, org.openide.util.NbBundle.getMessage(CreateNewKeyActionCNVisualPanel.class, "CreateNewKeyActionCNVisualPanel.cnLabel.text")); // NOI18N

        javax.swing.GroupLayout cnInfoPanelLayout = new javax.swing.GroupLayout(cnInfoPanel);
        cnInfoPanel.setLayout(cnInfoPanelLayout);
        cnInfoPanelLayout.setHorizontalGroup(
            cnInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        cnInfoPanelLayout.setVerticalGroup(
            cnInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 224, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cnLabel)
                .addGap(0, 264, Short.MAX_VALUE))
            .addComponent(cnTextField)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cnInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cnLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cnInfoPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXPanel cnInfoPanel;
    private javax.swing.JLabel cnLabel;
    private javax.swing.JTextField cnTextField;
    // End of variables declaration//GEN-END:variables
    static class CreateNewKeyActionCNPanel implements WizardDescriptor.Panel<WizardDescriptor> {

        private CreateNewKeyActionCNVisualPanel component;

        @Override
        public CreateNewKeyActionCNVisualPanel getComponent() {
            if (component == null) {
                component = new CreateNewKeyActionCNVisualPanel();
            }
            return component;
        }

        @Override
        public HelpCtx getHelp() {
            return HelpCtx.DEFAULT_HELP;
        }

        @Override
        public void readSettings(WizardDescriptor w) {
            final CreateNewKeyActionCNVisualPanel c = getComponent();
            final String host = (String) w.getProperty(CreateNewKeyAction.PROP_CN);
            if (host != null) {
                c.cnTextField.setText(host);
            }
        }

        @Override
        public void storeSettings(WizardDescriptor w) {
            final CreateNewKeyActionCNVisualPanel c = getComponent();
            final String host = StringUtils.trimToNull(c.cnTextField.getText());
            w.putProperty(CreateNewKeyAction.PROP_CN, host);
            final String certPath = StringUtils.trimToNull(c.cnTextField.getText());
            w.putProperty(CreateNewKeyAction.PROP_CN, certPath);
        }

        @Override
        public boolean isValid() {
            return true;
        }

        @Override
        public void addChangeListener(ChangeListener l) {
        }

        @Override
        public void removeChangeListener(ChangeListener l) {
        }

    }

}
