/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.thespheres.betula.services.ui.ks;

import java.io.IOException;
import java.net.URI;
import java.security.cert.Certificate;
import java.security.cert.X509Certificate;
import javax.swing.event.ChangeListener;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.apache.commons.lang3.StringUtils;
import org.openide.WizardDescriptor;
import org.openide.util.Exceptions;
import org.openide.util.HelpCtx;
import org.openide.util.NbBundle;
import org.openide.util.RequestProcessor;
import org.thespheres.betula.services.ui.util.dav.ResourcesUtil;
import sun.security.x509.X500Name;

/**
 *
 * @author boris.heithecker
 */
public class CreateNewKeyActionSchoolNameVisualPanel extends javax.swing.JPanel {

    private final RequestProcessor rp = new RequestProcessor(CreateNewKeyActionSchoolNameVisualPanel.class);
    private final RequestProcessor.Task task;

    public CreateNewKeyActionSchoolNameVisualPanel() {
        initComponents();
        task = rp.create(this::fetchCertificate);
    }

    private void submitFetchCertificate() {
        task.schedule(2000);
    }

    private void fetchCertificate() {
        final String host = StringUtils.trimToNull(urlTextField.getText());
        Certificate cert = null;
        if (host != null) {
            final String url = NbBundle.getMessage(ResourcesUtil.class, "Certificate.fetchProviderCertificate.urlHint", host);
            final URI uri = URI.create(url);
            try {
                cert = ResourcesUtil.fetchProviderCertificate(uri);
            } catch (IOException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
        if (cert != null) {
            X509Certificate x509 = (X509Certificate) cert;
            final javax.security.auth.x500.X500Principal p = x509.getSubjectX500Principal();
            try {
                X500Name n = new X500Name(p.getName());
                this.schoolNameTextField.setText(n.getOrganization());
                this.stateTextField.setText(n.getState());
                this.countryTextField.setText(n.getCountry());
            } catch (IOException ex) {
                Exceptions.printStackTrace(ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        schoolLabel = new javax.swing.JLabel();
        schoolNameTextField = new javax.swing.JTextField();
        stateLabel = new javax.swing.JLabel();
        stateTextField = new javax.swing.JTextField();
        countryLabel = new javax.swing.JLabel();
        countryTextField = new javax.swing.JTextField();
        urlLabel = new javax.swing.JLabel();
        urlTextField = new javax.swing.JTextField();
        browseCrtPathButton = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(schoolLabel, org.openide.util.NbBundle.getMessage(CreateNewKeyActionSchoolNameVisualPanel.class, "CreateNewKeyActionSchoolNameVisualPanel.schoolLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(stateLabel, org.openide.util.NbBundle.getMessage(CreateNewKeyActionSchoolNameVisualPanel.class, "CreateNewKeyActionSchoolNameVisualPanel.stateLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(countryLabel, org.openide.util.NbBundle.getMessage(CreateNewKeyActionSchoolNameVisualPanel.class, "CreateNewKeyActionSchoolNameVisualPanel.countryLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(urlLabel, org.openide.util.NbBundle.getMessage(CreateNewKeyActionSchoolNameVisualPanel.class, "CreateNewKeyActionSchoolNameVisualPanel.urlLabel.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(browseCrtPathButton, org.openide.util.NbBundle.getMessage(CreateNewKeyActionSchoolNameVisualPanel.class, "CreateNewKeyActionSchoolNameVisualPanel.browseCrtPathButton.text")); // NOI18N
        browseCrtPathButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(schoolNameTextField)
            .addComponent(stateTextField)
            .addComponent(countryTextField)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(schoolLabel)
                    .addComponent(stateLabel)
                    .addComponent(countryLabel)
                    .addComponent(urlLabel))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(118, Short.MAX_VALUE)
                .addComponent(browseCrtPathButton)
                .addContainerGap())
            .addComponent(urlTextField)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(schoolLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(schoolNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(stateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(countryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(countryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(urlLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(urlTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(browseCrtPathButton))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void browseButtonClicked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_browseButtonClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseCrtPathButton;
    private javax.swing.JLabel countryLabel;
    private javax.swing.JTextField countryTextField;
    private javax.swing.JLabel schoolLabel;
    private javax.swing.JTextField schoolNameTextField;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JTextField stateTextField;
    private javax.swing.JLabel urlLabel;
    private javax.swing.JTextField urlTextField;
    // End of variables declaration//GEN-END:variables

    class Listener implements DocumentListener {

        @Override
        public void insertUpdate(DocumentEvent e) {
            submitFetchCertificate();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            submitFetchCertificate();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            submitFetchCertificate();
        }
    }

    static class CreateNewKeyActionSchoolNamePanel implements WizardDescriptor.Panel<WizardDescriptor> {

        private CreateNewKeyActionSchoolNameVisualPanel component;

        @Override
        public CreateNewKeyActionSchoolNameVisualPanel getComponent() {
            if (component == null) {
                component = new CreateNewKeyActionSchoolNameVisualPanel();
            }
            return component;
        }

        @Override
        public HelpCtx getHelp() {
            return HelpCtx.DEFAULT_HELP;
        }

        @Override
        public void readSettings(WizardDescriptor w) {
            final CreateNewKeyActionSchoolNameVisualPanel c = getComponent();

        }

        @Override
        public void storeSettings(WizardDescriptor w) {
            final CreateNewKeyActionSchoolNameVisualPanel c = getComponent();

        }

        @Override
        public boolean isValid() {
            return true;
        }

        @Override
        public void addChangeListener(ChangeListener l) {
        }

        @Override
        public void removeChangeListener(ChangeListener l) {
        }

    }
}
